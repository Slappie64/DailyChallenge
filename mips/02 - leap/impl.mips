# #  Registers

#  | Register | Usage     | Type    | Description                                      |
#  | -------- | --------- | ------- | ------------------------------------------------ |
#  | `$a0`    | input     | integer | year to check                                    |
#  | `$v0`    | output    | boolean | input is leap year (`0` = `false`, `1` = `true`) |
#  | `$t0-9`  | temporary | any     | used for temporary storage                       |

.globl is_leap_year

is_leap_year:
        li $t0, 4       # Load divisor 4 into temporary register $t0
        div $a0, $t0    # Divide $a0 by 4
        mfhi $t0        # Remainder is in $t0
        bnez $t0, not_divisible_by_4

        li $t1, 100     # Load divisor 100 into temporary register $t1
        div $a0, $t1    # Divide $a0 by 100
        mfhi $t1        # Remainder is in $t1
        bnez $t1, not_divisible_by_100

        li $t2, 400     # Load divisor 400 into temporary register $t2
        div $a0, $t2    # Divide $a0 by 400
        mfhi $t2        # Remainder is in $t2
        bnez $t2, not_divisible_by_400
        beqz $t0 is_leap_year_4

not_divisible_by_100:
        li $v0, 1       # Leap year
        j is_leap_year_exit

not_divisible_by_400:
        li $v0, 0       # Not Leap Year
        j is_leap_year_exit

not_divisible_by_4:
        li $v0, 0       # Not Leap Year
        j is_leap_year_exit

is_leap_year_4:
    # Divisible by 4 and not divisible by 100 or 400
    li $v0, 1          # Leap year
    j is_leap_year_exit
    
is_leap_year:
        jr $ra
